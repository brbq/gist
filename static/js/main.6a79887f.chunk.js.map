{"version":3,"sources":["gists.js","App.js","reportWebVitals.js","index.js"],"names":["gists","id","title","code","keys","App","useState","input","setInput","displayedGists","setGists","autoFocus","onKeyDown","event","key","keywords","split","filter","g","find","k","includes","sort","a","b","akey","bkey","value","onInput","e","target","map","defaultValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAWeA,G,MATD,CACV,CACIC,GAAI,EACJC,MAAO,kBACPC,KAAM,SACNC,KAAM,CAAC,SAAU,MAAO,OAAQ,KAAM,aAAc,Y,OC8B7CC,MAjCf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGsBF,mBAAS,IAH/B,mBAGNG,EAHM,KAGUC,EAHV,KAoBb,OACE,qCACE,uBAAOC,WAAS,EAACC,UAjBC,SAACC,GACrB,GAAkB,UAAdA,EAAMC,IAAiB,CACzB,IAAMC,EAAWR,EAAMS,MAAM,KAC7BN,EACEV,EACCiB,QAAO,SAACC,GAAD,OAAOH,EAASI,MAAK,SAAAC,GAAC,OAAIF,EAAEd,KAAKiB,SAASD,SACjDE,MAAK,SAACC,EAAEC,GAGP,OAFeD,EAAEnB,KAAKa,QAAO,SAAAQ,GAAI,OAAIV,EAASI,MAAK,SAAAC,GAAC,OAAIA,IAAIK,SAC7CD,EAAEpB,KAAKa,QAAO,SAAAS,GAAI,OAAIX,EAASI,MAAK,SAAAC,GAAC,OAAIA,IAAIM,QAClC,GAAK,QAQQC,MAAOpB,EAAOqB,QAAS,SAAAC,GAAC,OAAIrB,EAASqB,EAAEC,OAAOH,UACxFlB,EAAesB,KAAI,SAACb,GAAD,OACd,gCACE,6BAAKA,EAAEhB,QACP,0BAAU8B,aAAcd,EAAEf,SAFlBe,EAAEjB,WChBTgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6a79887f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst gists = [\r\n    {\r\n        id: 1,\r\n        title: 'Simple for Loop',\r\n        code: 'for...',\r\n        keys: ['simple', 'for', 'loop', 'ts', 'typescript', 'react']\r\n    }\r\n];\r\n\r\nexport default gists\r\n","import './App.css';\nimport  gists from './gists';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [input, setInput] = useState('');\n  const [displayedGists, setGists] = useState([]);\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      const keywords = input.split(\" \");\n      setGists(\n        gists\n        .filter((g) => keywords.find(k => g.keys.includes(k)))\n        .sort((a,b) => {\n          const aCount = a.keys.filter(akey => keywords.find(k => k===akey))\n          const bCount = b.keys.filter(bkey => keywords.find(k => k===bkey))\n          return aCount >= bCount ? 1 : -1; \n        })\n      );\n    }\n  }\n\n  return (\n    <>\n      <input autoFocus onKeyDown={handleKeyDown} value={input} onInput={e => setInput(e.target.value)}/>\n      {displayedGists.map((g) => (\n            <div key={g.id}>\n              <h3>{g.title}</h3>\n              <textarea defaultValue={g.code}></textarea>\n            </div>\n        ))}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}